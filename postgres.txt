Install Postgres from Homebrew:
    brew update; brew install postgresql

Create a database
    createdb -e -E 'UTF-8' -O {dbowner} -h{host} -U{user} {database name}

Drop a database
    dropdb {database} -h{host} -U{user}
    DROP DATABASE {database}

Rename a database
    ALTER DATABASE name RENAME TO new_name

Connect to a database
    psql -h{host} -U{username} {database}

Restore a database
    pg_restore -h{host} -U{username} -d{database} {dump-file}

Restore a database with psql
    psql -U [user] -d [database] < ~/dump.sql

Turn on/off pretty formatting
    \x on/off
    \x auto

List databases
    \list
    \l

Switch database
    \connect {databasename}
    \c {databasename}

List datbase users
    \du

Add user (role)
    createuser {username}

Configure Postgres for remote access
    PostgreSQL Client Authentication Configuration File
        /usr/local/var/postgres/pg_hba.conf
            OR find / -name pg_hba.conf
        Update the trusted connections
            https://stackoverflow.com/questions/35722132/cant-connect-to-greenplum-with-error-message-no-pg-hba-conf-entry

    PostgreSQL configuration file
        /usr/local/var/postgres/postgresql.conf
            OR find / -name postgressql.conf
        Update the listen_addresses section to allow remote connections.
            https://www.bigbinary.com/blog/configure-postgresql-to-allow-remote-connection

Restart postgres on Mac
    brew services restart postgresql

Get tables matching %name%
    SELECT table_schema, table_name  FROM information_schema.tables WHERE table_name LIKE '%name%'

Get columns matching %name%
    SELECT table_name, column_name FROM information_schema.columns WHERE column_name LIKE '%name%' ORDER BY table_name;

Export data to STDOUT from command line
    psql -h localhost -U [db_user] -d [db_name] -c "COPY (select * from [table_name]) TO STDOUT;"

    psql -X -A -w -t -h localhost -U [db_user] -d [db_name] -c "COPY (select * from [table_name]) TO STDOUT;"
        -X, --no-psqlrc          do not read startup file (~/.psqlrc)
        -A, --no-align           unaligned table output mode
        -w, --no-password        never prompt for password
        -t, --tuples-only        print rows only

Create data and export to csv

    BEGIN;

    CREATE TEMP VIEW _results AS (
        SELECT
            somedata
        FROM somewhere
    );

    \COPY (SELECT * FROM _results) TO '~/data.csv' DELIMITER ',' CSV HEADER;

    ROLLBACK;

Dump/Export SQL for a single table
    pg_dump --host localhost --port 5432 --username [db_user] --format plain --verbose --file ~/var/[db_name].[table_name].dump --table public.account [db_name]

Dump/Export SQL for a single table, but without table parameters. INSERT statments only
    pg_dump -h localhost -U [db_user] --column-inserts --data-only --table=[table_name] -f ~/var/[table_name].sql [db_name]

Restore that table
    pg_restore --host localhost --port 5432 --username [db_user] --dbname "[db_name]" --table public.account -Ft --verbose ~/var/[db_name].[table_name].dump


