SOLID --Robert C. Martin
 - SOLID principles are object-oriented design concepts relevant to software development. SOLID is an acronym for five other class-design principles: Single Responsibility Principle, Open-Closed 
Principle, Liskov Substitution Principle, Interface Segregation Principle, and Dependency Inversion Principle.

Test-driven development --Kent Beck
 - Test-driven development (TDD) is a software development process relying on software requirements being converted to test cases before software is fully developed, and tracking all software 
development by repeatedly testing the software against all test cases.

Hexagonal architecture --Alistair Cockburn
 - The hexagonal architecture, or ports and adapters architecture, is an architectural pattern used in software design. It aims at creating loosely coupled application components that can be easily 
connected to their software environment by means of ports and adapters.

Domain Driven Design or DDD --Eric Evans
 - Placing the main interest of the project into defining the core domain of the problem it wants to solve
 - Explore collaboration of domain practitioners (business or users) and software developers.
 - Speak a ubiquitous language within an explicitly bounded context
