- Installed composer locally (http://getcomposer.org/download/)
- Used composer to create a new symfony project: php composer.phar create-project symfony/framework-standard-edition path/ 2.4.0 (sets up directory structure)
- Create a bundle for your "thing"
    php app/console generate:bundle --namespace=Acme/StoreBundle
- Create app/logs and app/cache directories and set permissions to 777
  - Setup file Permissions ACLs for Debian (so www-data can edit/delete files):
    - https://help.ubuntu.com/community/FilePermissionsACLs
    - http://symfony.com/doc/current/book/installation.html#configuration-and-setup
- Configure the database in app/config/parameters.yml and app/config/config.yml
- Create the actual database: php app/console doctrine:database:create
    Be sure to change the default collation and character set:
      collation-server = utf8_general_ci
      character-set-server = utf8
- Make entities for Doctrine Objects: http://symfony.com/doc/current/book/doctrine.html
- Create the database: php app/console doctrine:schema:update --force


Commands:

Rebuild database from schema:
  php app/console doctrine:schema:update --force

Get Symfony version:
  php app/console --version

Clear cache:
  php app/console cache:clear
  php app/console cache:clear --env=prod --no-debug

Load fixtures:
  php app/console doctrine:fixtures:load

Publish js/css resources managed by assetic (don't forget to clear the cache)
  php app/console assetic:dump

Generate a new doctrine entity:
  php app/console generate:doctrine:entity
